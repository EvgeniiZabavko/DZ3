// #### Task 1 üíª

// –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–∞–∂–¥—ã–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø—É–Ω–∫—Ç–æ–≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π:
// 1. –°–æ–∑–¥–∞–π—Ç–µ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç `profile` (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `const`);
// 2. –î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ `name` —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º `John`;
// 3. –î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ `#lib_internal_isAdmin` —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º `true`;
// 4. –ò–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ `name` —Å `John` –Ω–∞ `–§—ë–¥–æ—Ä`;
// 5. –£–¥–∞–ª–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ `#lib_internal_isAdmin`;
// –†–µ—à–µ–Ω–∏–µ:
const profile = {
    name: 'john',
    lib_internal_isAdmin: true,
};
profile.name = '–§—ë–¥–æ—Ä';
delete profile.lib_internal_isAdmin;



// #### Task 2 üñ•

// –î–∞–Ω –æ–±—å–µ–∫—Ç:
// ```JS
// const colors = {
//     'ru pum pu ru rum': {
//         red: '–∫—Ä–∞—Å–Ω—ã–π',
//         green: '–∑–µ–ª–µ–Ω—ã–π',
//         blue: '—Å–∏–Ω–∏–π'
//     },
// };
// –í—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–ª–æ–≤–æ –∫—Ä–∞—Å–Ω—ã–π
// –†–µ—à–µ–Ω–∏–µ:
const colors = {
    'ru pum pu ru rum': {
        red: '–∫—Ä–∞—Å–Ω—ã–π',
        green: '–∑–µ–ª–µ–Ω—ã–π',
        blue: '—Å–∏–Ω–∏–π'
    },
};
console.log(colors['ru pum pu ru rum'].red);



// #### Task 3 üñ•
// –î–∞–Ω –æ–±—å–µ–∫—Ç:
// ```JS
//     const student = {
//         name: 'John',
//         age: 19,
//         isHappy: true
//     }
// C –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ **for in** –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–Ω–∞—á–∞–ª–∞ –≤—Å–µ –ø–∞—Ä—ã –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–±—ä–µ–∫—Ç–µ.
// > name - John age - 19 isHappy - true
// –†–µ—à–µ–Ω–∏–µ:
const student = {
    name: 'John',
    age: 19,
    isHappy: true,
}
for (const property in student) {
    console.log(`${property}: ${student[property]}`);
};



// #### Task 4 üñ•
// –î–∞–Ω –æ–±—å–µ–∫—Ç:
// ```JS
//     let salaries = {
//         andrey: 500,
//         sveta: 413,
//         anton: 987,
//         alex: 664,
//         alexandra: 199
//     }
// –í—ã—á–∏—Å–ª–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –∑–∞—Ä–ø–ª–∞—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
// –†–µ—à–µ–Ω–∏–µ:
function averageSalary(salaries) {
    for (let salary of Object.values(salaries)) {
        average = (Object.values(salaries).reduce((a, b) => a + b, 0) / Object.values(salaries).length);
    }
    return average;
}
let salaries = {
    andrey: 500,
    sveta: 413,
    anton: 987,
    alex: 664,
    alexandra: 199,
    nina: 500
}
console.log(averageSalary(salaries));



// #### Task 5 üñ•
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é `isEmpty()`, –∫–æ—Ç–æ—Ä–∞—è –≤–µ—Ä–Ω—ë—Ç `true`, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ –Ω–µ—ë –æ–±—ä–µ–∫—Ç –ø—É—Å—Ç (–Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–≤–æ–π—Å—Ç–≤).
// ```JS
//   isEmpty({}); // true
//   isEmpty({ lol: "kek" }); // false
// –†–µ—à–µ–Ω–∏–µ:
function isEmpty(obj) {
    for (let key in obj) {
        return false;
    }
    return true;
}



// #### Task 6 üñ•
// –£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—å–µ–∫—Ç —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏. –ù–∞—à–∞ –∑–∞–¥–∞—á–∞ —É–∑–Ω–∞—Ç—å –∏–º—è –ø—Ç–∏—Ü—ã –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å. –ù–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏ –≤ —ç—Ç–æ–º –æ–±—å–µ–∫—Ç–µ –Ω–µ—Ç—É –ø—Ç–∏—Ü—ã. –ï—Å–ª–∏ –ø–æ–ø—Ä–æ–±—É–µ–º —É–∑–Ω–∞—Ç—å –∏–º—è –º—ã –ø–æ–ª—É—á–∏–º **–û–®–ò–ë–ö–£**.
// –ó–∞–¥–∞—á–∞ –ø—Ä–∏–¥—É–º–∞—Ç—å –∫–∞–∫ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—å–µ–∫—Ç—É –∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –æ—à–∏–±–∫—É —á—Ç–æ–±—ã –Ω–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ –¥–∞–ª—å—à–µ.
// ```JS
// const animals = {
//    cat: {
//       name: '–ï–Ω—á–∏–∫',
//       age: 3,
//    },
//    dog: {
//       name: '–û—Ä–µ–æ',
//       age: 2,
//    }
// }
// –†–µ—à–µ–Ω–∏–µ:
const animals = {
    cat: {
        name: '–ï–Ω—á–∏–∫',
        age: 3,
    },
    dog: {
        name: '–û—Ä–µ–æ',
        age: 2,
    }
}
console.log(animals?.bird?.name);




// #### Task 7 üñ•
// –û–ø–∏—à–∏—Ç–µ –ø–æ –ø—É–Ω–∫—Ç–∞–º, –∫–∞–∫ –æ—Ç—Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?
// –í–∞–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å, —á—Ç–æ –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ –≤ `this` –∏ –ø–æ—á–µ–º—É?
// ```JS
// function makeProfile() {
//   return {
//     name: "John",
//     self: this
//   };
// }

// let user = makeProfile();

// –†–µ—à–µ–Ω–∏–µ:
// alert( user.self.name ); // –ö–∞–∫–∏–º –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç?
// –≤ user –ø—Ä–æ–∫–∏–Ω—É—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ –∏–∑ makeProfile() (name –∏ self).
// this –±—É–¥–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ window –∏–ª–∏ –Ω–∞ global
// –í name –±—É–¥–µ—Ç "John"



// #### Task 8 üñ•

// –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç —Å—á—ë—Ç—á–∏–∫ `counter`, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ä–∞–≤–Ω–æ–µ `0`.
// –í `counter` –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ—Ç–æ–¥ `showCurrent()`, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
// –¢–∞–∫–∂–µ –≤ –æ–±—ä–µ–∫—Ç–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è:
// ```JS
// counter.showCurrent(); // 0 - –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
// counter.increment();
// counter.increment();
// counter.showCurrent(); // 2
// counter.decrement();
// counter.showCurrent(); // 1
// –†–µ—à–µ–Ω–∏–µ:
const counter = {
    count: 0,
    showCurrent() {
        console.log(this.count);
    },
    increment() {
        this.count++;
    },
    decrement() {
        this.count--;
    }
}
counter.showCurrent(); // 0 - –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
counter.increment();
counter.increment();
counter.showCurrent(); // 2
counter.decrement();
counter.showCurrent(); // 1

// #### Task 9 üñ•

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ –∑–∞–¥–∞–Ω–∏—è 8 —Ç–∞–∫, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ü–µ–ø–æ—á–∫—É –≤—ã–∑–æ–≤–æ–≤:
// ```JS
// counter.showCurrent().increment().increment().showCurrent().decrement().showCurrent();
// –†–µ—à–µ–Ω–∏–µ:
const counterFirst = {
    count: 0,
    showCurrent() {
        console.log(this.count);
        return this;
    },
    increment() {
        this.count++;
        return this;
    },
    decrement() {
        this.count--;
        return this;
    }
}
counterFirst.showCurrent().increment().increment().showCurrent().decrement().showCurrent();

// #### Task 10 üñ•

// –°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä `Counter()`, –∫–æ—Ç–æ—Ä–∞—è —Å–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—á—ë—Ç—á–∏–∫–∏ –∏–∑ –∑–∞–¥–∞–Ω–∏–π 8-9:

// ```JS
// const counter1 = new Counter();
// const counter2 = new Counter();

// counter2.increment();
// counter2.showCurrent(); // 1
// counter1.showCurrent(); // 0
// ```